import React, { useState } from 'react';
import { Dialog, List, ListItem, IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Autocomplete, Typography, Container } from '@mui/material';
import EditIcon from '@mui/icons-material/Edit';
import SaveIcon from '@mui/icons-material/Save';

const cities = {
    ÏÑúÏö∏: [
      'Í∞ïÎÇ®Íµ¨', 'Í∞ïÎèôÍµ¨', 'Í∞ïÎ∂ÅÍµ¨', 'Í∞ïÏÑúÍµ¨', 'Í¥ÄÏïÖÍµ¨', 'Í¥ëÏßÑÍµ¨', 'Íµ¨Î°úÍµ¨',
      'Í∏àÏ≤úÍµ¨', 'ÎÖ∏ÏõêÍµ¨', 'ÎèÑÎ¥âÍµ¨', 'ÎèôÎåÄÎ¨∏Íµ¨', 'ÎèôÏûëÍµ¨', 'ÎßàÌè¨Íµ¨', 'ÏÑúÎåÄÎ¨∏Íµ¨',
      'ÏÑúÏ¥àÍµ¨', 'ÏÑ±ÎèôÍµ¨', 'ÏÑ±Î∂ÅÍµ¨', 'ÏÜ°ÌååÍµ¨', 'ÏñëÏ≤úÍµ¨', 'ÏòÅÎì±Ìè¨Íµ¨', 'Ïö©ÏÇ∞Íµ¨',
      'ÏùÄÌèâÍµ¨', 'Ï¢ÖÎ°úÍµ¨', 'Ï§ëÍµ¨', 'Ï§ëÎûëÍµ¨'
    ],
    Í≤ΩÍ∏∞: [
      'Í∞ÄÌèâÍµ∞', 'Í≥†ÏñëÏãú', 'Í≥ºÏ≤úÏãú', 'Í¥ëÎ™ÖÏãú', 'Í¥ëÏ£ºÏãú', 'Íµ¨Î¶¨Ïãú', 'Íµ∞Ìè¨Ïãú',
      'ÍπÄÌè¨Ïãú', 'ÎÇ®ÏñëÏ£ºÏãú', 'ÎèôÎëêÏ≤úÏãú', 'Î∂ÄÏ≤úÏãú', 'ÏÑ±ÎÇ®Ïãú', 'ÏàòÏõêÏãú', 'ÏãúÌù•Ïãú',
      'ÏïàÏÇ∞Ïãú', 'ÏïàÏÑ±Ïãú', 'ÏïàÏñëÏãú', 'ÏñëÏ£ºÏãú', 'ÏñëÌèâÍµ∞', 'Ïó¨Ï£ºÍµ∞', 'Ïó∞Ï≤úÍµ∞', 'Ïò§ÏÇ∞Ïãú',
      'Ïö©Ïù∏Ïãú', 'ÏùòÏôïÏãú', 'ÏùòÏ†ïÎ∂ÄÏãú', 'Ïù¥Ï≤úÏãú'
    ],
    Ï∂©Ï≤≠: [
      'Ï≤úÏïàÏãú', 'Ï≤≠Ï£ºÏãú', 'Í≥µÏ£ºÏãú', 'Î≥¥Î†πÏãú', 'ÏïÑÏÇ∞Ïãú', 'ÏÑúÏÇ∞Ïãú', 'ÎÖºÏÇ∞Ïãú', 'Í≥ÑÎ£°Ïãú',
      'ÎãπÏßÑÏãú', 'Í∏àÏÇ∞Íµ∞', 'Ïó∞Í∏∞Íµ∞', 'Î∂ÄÏó¨Íµ∞', 'ÏÑúÏ≤úÍµ∞', 'Ï≤≠ÏñëÍµ∞', 'ÌôçÏÑ±Íµ∞', 'ÏòàÏÇ∞Íµ∞',
      'ÌÉúÏïàÍµ∞'
    ],
    Ï†ÑÎùº: [
      'Ï†ÑÏ£ºÏãú', 'Íµ∞ÏÇ∞Ïãú', 'ÏùµÏÇ∞Ïãú', 'Ï†ïÏùçÏãú', 'ÎÇ®ÏõêÏãú', 'ÍπÄÏ†úÏãú', 'ÏôÑÏ£ºÍµ∞', 'ÏßÑÏïàÍµ∞',
      'Î¨¥Ï£ºÍµ∞', 'Ïû•ÏàòÍµ∞', 'ÏûÑÏã§Íµ∞', 'ÏàúÏ∞ΩÍµ∞', 'Í≥†Ï∞ΩÍµ∞', 'Î∂ÄÏïàÍµ∞'
    ],
    Í≤ΩÏÉÅ: [
      'Ìè¨Ìï≠Ïãú', 'Í≤ΩÏ£ºÏãú', 'ÍπÄÏ≤úÏãú', 'ÏïàÎèôÏãú', 'Íµ¨ÎØ∏Ïãú', 'ÏòÅÏ£ºÏãú', 'ÏòÅÏ≤úÏãú', 'ÏÉÅÏ£ºÏãú',
      'Î¨∏Í≤ΩÏãú', 'Í≤ΩÏÇ∞Ïãú', 'Íµ∞ÏúÑÍµ∞', 'ÏùòÏÑ±Íµ∞', 'Ï≤≠ÏÜ°Íµ∞', 'ÏòÅÏñëÍµ∞', 'ÏòÅÎçïÍµ∞', 'Ï≤≠ÎèÑÍµ∞',
      'Í≥†Î†πÍµ∞', 'ÏÑ±Ï£ºÍµ∞', 'Ïπ†Í≥°Íµ∞', 'ÏòàÏ≤úÍµ∞', 'Î¥âÌôîÍµ∞', 'Ïö∏ÏßÑÍµ∞', 'Ïö∏Î¶âÍµ∞'
    ],
    Í∞ïÏõê: [
      'Í∞ïÎ¶âÏãú', 'ÎèôÌï¥Ïãú', 'ÏÜçÏ¥àÏãú', 'ÏõêÏ£ºÏãú', 'Ï∂òÏ≤úÏãú', 'ÌÉúÎ∞±Ïãú', 'ÏÇºÏ≤ôÏãú', 'ÌôçÏ≤úÍµ∞',
      'Ìö°ÏÑ±Íµ∞', 'ÏòÅÏõîÍµ∞', 'ÌèâÏ∞ΩÍµ∞', 'Ï†ïÏÑ†Íµ∞', 'Ï≤†ÏõêÍµ∞', 'ÌôîÏ≤úÍµ∞', 'ÏñëÍµ¨Íµ∞', 'Ïù∏Ï†úÍµ∞',
      'Í≥†ÏÑ±Íµ∞', 'ÏñëÏñëÍµ∞'
    ],
  };
  
const UserInfoDialog = ({ open, onClose, userInfo, setUserInfo }) => {
    const [editMode, setEditMode] = useState(false);
    const handleEditClick = () => {
        setEditMode(true);
    };

    const handleSaveClick = () => {
        setEditMode(false);
    };

    return (
        <Dialog open={open} onClose={onClose}>
            <List sx={{ width: '330px', p: 2 }}>
                <div>
                <Typography variant="h4" sx={{fontWeight: 800, textAlign: 'center', pt: 3}}>üëª </Typography>
                <Typography sx={{fontWeight: 800, textAlign: 'center', fontSize: '24px', pb: 1}}>{userInfo.username} Îãò</Typography>
                {editMode ? (
                    <Container>
                        <ListItem >
                            <FormControl fullWidth>
                                <InputLabel id="semester-select-label">ÌòÑÏû¨ÌïôÍ∏∞</InputLabel>
                                <Select
                                    labelId="semester-select-label"
                                    id="semester-select"
                                    value={userInfo.semester}
                                    label="ÌòÑÏû¨ÌïôÍ∏∞"
                                    onChange={(e) => setUserInfo({ ...userInfo, semester: e.target.value })}
                                >
                                    <MenuItem value={1}>1ÌïôÍ∏∞</MenuItem>
                                    <MenuItem value={2}>2ÌïôÍ∏∞</MenuItem>
                                    <MenuItem value={3}>3ÌïôÍ∏∞</MenuItem>
                                    <MenuItem value={4}>4ÌïôÍ∏∞</MenuItem>
                                    <MenuItem value={5}>5ÌïôÍ∏∞</MenuItem>
                                    <MenuItem value={6}>6ÌïôÍ∏∞</MenuItem>
                                    <MenuItem value={7}>7ÌïôÍ∏∞</MenuItem>
                                    <MenuItem value={8}>8ÌïôÍ∏∞</MenuItem>
                                    <MenuItem value={9}>9ÌïôÍ∏∞ Ïù¥ÏÉÅ</MenuItem>
                                </Select>
                            </FormControl>
                        </ListItem>
                        <ListItem>
                            <FormControl fullWidth >
                                <InputLabel id="registration-status-select-label">Îì±Î°ùÏÉÅÌÉú</InputLabel>
                                <Select
                                    labelId="registration-status-select-label"
                                    id="registration-status-select"
                                    value={userInfo.enrollStatus}
                                    label="Îì±Î°ùÏÉÅÌÉú"
                                    onChange={(e) => setUserInfo({ ...userInfo, enrollStatus: e.target.value })}
                               >
                                    {['enrolled', 'absence', 'certificated'].map((value) => (
                                        <MenuItem key={value} value={value}>
                                            {value === 'enrolled' ? 'Ïû¨Ìïô' : value === 'absence' ? 'Ìú¥Ìïô' : 'ÏàòÎ£å'}
                                        </MenuItem>
                                    ))}
                                </Select>
                            </FormControl>
                        </ListItem>
                        <ListItem>
                            <TextField
                                type="number"
                                label="Ï†ÑÏ≤¥ÌïôÍ∏∞ ÌèâÏ†ê"
                                value={userInfo.gpa}
                                onChange={(e) => setUserInfo({...userInfo, gpa: e.target.value})}
                                fullWidth
                                inputProps={{ step: 0.1 }} 
                            />
                        </ListItem>
                        <ListItem>
                            <TextField
                                type="number"
                                label="ÏßÅÏ†ÑÌïôÍ∏∞ ÌèâÏ†ê"
                                value={userInfo.lastSemGpa}
                                onChange={(e) => setUserInfo({...userInfo, lastSemGpa: e.target.value})}
                                fullWidth
                                inputProps={{ step: 0.1 }} 
                            />
                        </ListItem>
                        <ListItem>
                            <FormControl fullWidth>
                                <InputLabel id="incomeBracket-quintile-select-label">ÏÜåÎìù Î∂ÑÏúÑ</InputLabel>
                                <Select
                                    labelId="incomeBracket-quintile-select-label"
                                    id="incomeBracket-quintile-select"
                                    value={userInfo.incomeBracket}
                                    label="ÏÜåÎìù Î∂ÑÏúÑ"
                                    onChange={(e) => setUserInfo({...userInfo, incomeBracket: e.target.value})}
                                >
                                    {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((value) => (
                                        <MenuItem key={value} value={value}>{value}Î∂ÑÏúÑ</MenuItem>
                                    ))}
                                </Select>
                            </FormControl>
                        </ListItem>
                        <ListItem>
                                <FormControl fullWidth >
                                    <InputLabel id="residence-select-label">Í±∞Ï£ºÏßÄ</InputLabel>
                                    <Select
                                        labelId="residence-select-label"
                                        id="residence-select"
                                        value={userInfo.residence}
                                        label="Í±∞Ï£ºÏßÄ"
                                        onChange={(e) => setUserInfo({...userInfo, residence: {...userInfo.residence, residence: e.target.value}})}
                                        >
                                        {['Í∞ïÏõê', 'Í≤ΩÍ∏∞', 'Í≤ΩÏÉÅ', 'Í¥ëÏ£º', 'ÎåÄÍµ¨', 'ÎåÄÏ†Ñ', 'Î∂ÄÏÇ∞', 'ÏÑúÏö∏', 'ÏÑ∏Ï¢Ö', 'Ïö∏ÏÇ∞', 'Ïù∏Ï≤ú', 'Ï†ÑÎùº', 'Ï†úÏ£º', 'Ï∂©Ï≤≠'].map((region) => (
                                            <MenuItem key={region} value={region}>{region}</MenuItem>
                                        ))}
                                    </Select>
                                </FormControl>
                            </ListItem>
                            {/* {['Í∞ïÏõê', 'Í≤ΩÍ∏∞', 'Í≤ΩÏÉÅ', 'Ï†ÑÎùº', 'Ï∂©Ï≤≠', 'ÏÑúÏö∏'].includes(userInfo.residenceInfo.residence) && (
                                <ListItem>
                                    <FormControl fullWidth >
                                        <InputLabel id="city-select-label">Ïãú/Íµ∞/Íµ¨</InputLabel>
                                        <Select
                                            labelId="city-select-label"
                                            id="city-select"
                                            value={userInfo.residence}
                                            label="Ïãú/Íµ∞/Íµ¨"
                                            onChange={(e) => setUserInfo({...userInfo, residenceInfo: {...userInfo.residenceInfo, city: e.target.value}})}
                                        >
                                            {cities[userInfo.residenceInfo.residence].map((city) => (
                                                <MenuItem key={city} value={city}>{city}</MenuItem>
                                            ))}
                                        </Select>
                                    </FormControl>
                                </ListItem>
                        )} */}
                        <ListItem sx={{justifyContent: 'flex-end'}}>
                            <IconButton onClick={handleSaveClick}>
                                <SaveIcon />
                            </IconButton>
                        </ListItem>
                    </Container>
                ) : (
                    <Container>
                        <ListItem>
                            <Typography variant="body1" sx={{ fontWeight: 700, pr: 2 }}>ÏÑ±Î≥Ñ </Typography>
                            <Typography variant="body1">{userInfo.gender === "female"? "Ïó¨Ïûê" : "ÎÇ®Ïûê"}</Typography>                        
                        </ListItem>
                        <ListItem>
                            <Typography variant="body1" sx={{ fontWeight: 700, pr: 2 }}>ÌòÑÏû¨ÌïôÍ∏∞ </Typography>
                            <Typography variant="body1">{userInfo.semester}ÌïôÍ∏∞</Typography>   
                        </ListItem>
                        <ListItem>
                            <Typography variant="body1" sx={{ fontWeight: 700, pr: 2 }}>Îì±Î°ùÏÉÅÌÉú </Typography>
                            <Typography variant="body1">{userInfo.enrollStatus === 'enrolled' ? 'Ïû¨Ìïô' : userInfo.enrollStatus === 'absence' ? 'Ìú¥Ìïô' : 'ÏàòÎ£å'}</Typography> 
                        </ListItem>
                        <ListItem>
                            <Typography variant="body1" sx={{ fontWeight: 700, pr: 2 }}>Ï†ÑÍ≥µ </Typography>
                            <Typography variant="body1">{userInfo.major}</Typography> 
                        </ListItem>
                        <ListItem>
                            <Typography variant="body1" sx={{ fontWeight: 700, pr: 2 }}>Ï†ÑÏ≤¥ÌïôÍ∏∞ ÌèâÏ†ê </Typography>
                            <Typography variant="body1">{userInfo.gpa} <b>/ 4.5</b></Typography> 
                        </ListItem>
                        <ListItem>
                            <Typography variant="body1" sx={{ fontWeight: 700, pr: 2 }}>ÏßÅÏ†ÑÌïôÍ∏∞ ÌèâÏ†ê </Typography>
                            <Typography variant="body1">{userInfo.lastSemGpa} <b>/ 4.5</b></Typography> 
                        </ListItem>
                        <ListItem>
                            <Typography variant="body1" sx={{ fontWeight: 700, pr: 2 }}>ÏÜåÎìùÎ∂ÑÏúÑ </Typography>
                            <Typography variant="body1">{userInfo.incomeBracket}Î∂ÑÏúÑ</Typography> 
                        </ListItem>
                        <ListItem>
                                <Typography variant="body1" sx={{ fontWeight: 700, pr: 2 }}>Í±∞Ï£ºÏßÄ </Typography>
                                <Typography variant="body1">{userInfo.residence}</Typography>
                        </ListItem>
                        <ListItem sx={{justifyContent: 'flex-end'}}>
                            <IconButton onClick={handleEditClick}>
                                <EditIcon />
                            </IconButton>
                        </ListItem>
                    </Container>
                )}
                </div>
            </List>
        </Dialog>
    );
};

export default UserInfoDialog;
